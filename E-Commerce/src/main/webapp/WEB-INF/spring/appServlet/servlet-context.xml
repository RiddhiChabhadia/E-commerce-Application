<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<resources mapping="/js/**" location="/js/" />
	
	<resources mapping="/jquery-ui-1.9.2/**" location="/jquery-ui-1.9.2/" />
	<resources mapping="/css/**" location="/css/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<beans:bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<beans:property name="resourceLoaderPath" value="/WEB-INF/velocity/" />

	</beans:bean>

	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<beans:property name="cache" value="true" />
		<beans:property name="prefix" value="" />
		<beans:property name="suffix" value=".vm" />
		<beans:property name="order" value="1" />	
	</beans:bean>
	
	<beans:bean class="com.riddhi.spring.dao.SupplierDAO"></beans:bean>
	<beans:bean class="com.riddhi.spring.dao.ProductDAO"></beans:bean>
	<beans:bean class="com.riddhi.spring.dao.AddressDAO"></beans:bean>
	<beans:bean class="com.riddhi.spring.dao.CustomerDAO"></beans:bean>
	<beans:bean class="com.riddhi.spring.dao.CartDAO"></beans:bean>
		<beans:bean class="com.riddhi.spring.dao.OrderDAO"></beans:bean>
	<beans:bean class="com.riddhi.spring.validator.SupplierRegValidator"></beans:bean>

	
		<context:component-scan base-package="com.riddhi.spring.controller"/>	
	<context:component-scan base-package="com.riddhi.spring.dao"/>
	<context:component-scan base-package="com.riddhi.spring.validator"/>
	
	
	<interceptors>
        <interceptor>
            <mapping path="/**/*" />
            <beans:bean class="com.riddhi.spring.interceptor.Interceptor">
                  </beans:bean>
        </interceptor>
    </interceptors>
	
</beans:beans>
